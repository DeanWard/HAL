name: Version Management

on:
  push:
    branches: ["main"]
    paths: ["package.json"]  # Only trigger when package.json changes
  
  # Allow manual triggering for fixing version mismatches
  workflow_dispatch:

permissions:
  contents: write  # Required to create tags and releases

jobs:
  version-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper tag comparison
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      
      - name: Get package version
        id: package-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=v$VERSION" >> $GITHUB_OUTPUT
          echo "Package version: v$VERSION"
      
      - name: Check if tag exists
        id: tag-exists
        run: |
          TAG="${{ steps.package-version.outputs.version }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag $TAG already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag $TAG does not exist"
          fi
      
      - name: Create and push tag
        if: steps.tag-exists.outputs.exists == 'false'
        run: |
          TAG="${{ steps.package-version.outputs.version }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"
          echo "Created and pushed tag: $TAG"
      
      - name: Create GitHub Release
        if: steps.tag-exists.outputs.exists == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ steps.package-version.outputs.version }}"
          gh release create "$TAG" \
            --title "Release $TAG" \
            --notes "## What's Changed

          Automated release for version $TAG
          
          ### Installation
          \`\`\`bash
          npm install hal-mcp@${TAG#v}
          \`\`\`
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/v1.0.12...$TAG" \
            --latest
      
      - name: Summary
        run: |
          TAG="${{ steps.package-version.outputs.version }}"
          if [[ "${{ steps.tag-exists.outputs.exists }}" == "false" ]]; then
            echo "✅ Successfully created tag and release: $TAG"
          else
            echo "ℹ️  Tag $TAG already exists, no action needed"
          fi 